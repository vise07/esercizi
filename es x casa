import java.util.Scanner;

public class Main {
    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);

        int l;

        boolean uscita;

        //ciclo do while per inserire la lunghezza dell'array corretta (da 8 a 10)
        do {
            System.out.println("Inserisci la lunghezza del tuo array che vada da 8 a 10: ");
            l = sc.nextInt();
            if (l < 8 || l > 10) {
                System.out.println("Lunghezza array errata.");
                uscita = true;
            } else {
                uscita = false;
            }
        } while (uscita);

        System.out.println("Lunghezza array accettabile.");

        int[] array = new int[l];

        System.out.println("Inserisci dei numeri interi e non ripetuti che vadano da 1 a 30 che compongono il tuo array: ");

        //ciclo for per inserire i numeri
        for (int i = 0; i < l; i++) {
            int num;
            boolean numOK;

            //ciclo do while per inserire i numeri che compongono l'array (da 1 a 30)
            do {
                num = sc.nextInt();
                if(num > 0 && num < 31){
                    System.out.println("Numero compreso");
                    numOK = true;
                } else {
                    System.out.println("Numero non compreso, reinserisci");
                    numOK = false;
                }
            } while (!numOK);

            array[i] = num;
        }

        //invocazione metodo
        array = eliminaDoppi(array);

        System.out.println("Ecco il tuo array senza duplicati: ");

        //stampa del contenuto delle celle dell'array senza numeri doppi
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + " ");
        }

        int[][] arrayDiviso = new int[][];
        //invocazione metodo
        arrayDiviso = divideArray(array);

        System.out.println("\nEcco il tuo array diviso: ");

        //stampa dell'array diviso fra numeri dispari e pari
        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + " ");
        }


    }

    //Metodo che elimina i numeri doppi
    public static int[] eliminaDoppi (int[] array){

        int[] arrayNoDoppi = new int[array.length];

        int contaDoppi = 0;

        for (int i = 0; i < array.length; i++) {
            boolean doppi = false;
            for (int j = 0; j < contaDoppi; j++) {
                if (array[i] == arrayNoDoppi[j]) {
                    doppi = true;
                    break;
                }
            }
            if (!doppi) {
                arrayNoDoppi[contaDoppi] = array[i];
                contaDoppi++;
            }
        }

        return arrayNoDoppi;
    }

    public static int[][] divideArray(int[] arr) {
        int[] oddPart = new int[0];
        int[] evenPart = new int[0];

        for (int num : arr) {
            if (num % 2 == 1) {
                oddPart = addElement(oddPart, num);
            } else {
                evenPart = addElement(evenPart, num);
            }
        }
        
        int[] result = new int[0];
        
        return result;
    }

    private static int[] addElement(int[] arr, int num) {
        int[] newArr = new int[arr.length + 1];
        System.arraycopy(arr, 0, newArr, 0, arr.length);
        newArr[arr.length] = num;
        return newArr;
    }
}
